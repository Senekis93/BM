package{	import flash.events.Event;	import flash.display.Sprite;	import flash.display.Graphics;	import flash.display.LineScaleMode;	import flash.geom.Matrix;		public class ColorSpectrum extends Sprite	{				private var _width:int, _height:int, R:int, G:int, B:int, color:int, rad:Number, current:Number, whiteM:Matrix, blackM:Matrix;				private const g:Graphics = graphics, WHITE:int = 0xFFFFFF, BLACK:int = 0;				public function ColorSpectrum(W:int, H:int):void		{			_width = W;			_height = H;			addEventListener(Event.ADDED_TO_STAGE, go);		}				private function go(e:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE, go);			for (var i:int = 0; i < _width; i++)			{				current = i / _width;				rad = (-360 * current) * (Math.PI / 180);				R = Math.cos(rad) * 127 + 128 << 16;				G = Math.cos(rad + 2 * Math.PI / 3) * 127 + 128 << 8;				B = Math.cos(rad + 4 * Math.PI / 3) * 127 + 128;				color = R | G | B;				whiteM = new Matrix();				whiteM.createGradientBox(1, _height * .5, Math.PI * .5, 0, 0);				blackM = new Matrix();				blackM.createGradientBox(1, _height * .5, Math.PI * .5, 0, _height * .5);				g.lineStyle(1, 0, 1);				g.lineGradientStyle("linear", [WHITE, color], [100, 100], [0, 255], whiteM);				g.moveTo(i, 0);				g.lineTo(i, _height * .5);				g.lineGradientStyle("linear", [color, BLACK], [100, 100], [0, 255], blackM);				g.moveTo(i, _height * .5);				g.lineTo(i, _height);			}		}		}}